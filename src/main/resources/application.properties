# spring default
spring.main.allow-bean-definition-overriding=true
#
# spring cloud streams kafka streams defaults
spring.cloud.stream.kafka.streams.binder.application-id=kpay
#
## Serializer and my (big) problems with them, but
## Spring for Apache Kafka provides a convenient JsonSerde to be used with Kafka Streams applications
## https://github.com/schacko-samples/json-serde-example
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde=org.springframework.kafka.support.serializer.JsonSerde
spring.cloud.stream.kafka.streams.binder.configuration.spring.json.value.default.type=ch.wesr.kpay.payments.model.Payment
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms=1000
spring.cloud.stream.kafka.binder.auto-add-partitions=true
spring.cloud.stream.kafka.streams.binder.auto-add-partitions=true
#
## Topics
spring.cloud.stream.dynamic-destinations=paymentIncoming,paymentInflight,paymentConfirmed
#
### paymentProducerOutput
spring.cloud.stream.bindings.paymentProducerOutput.destination=paymentIncoming
spring.cloud.stream.bindings.paymentProducerOutput.producer.header-mode=raw
#
### paymentIncomingInput
spring.cloud.stream.bindings.paymentIncomingInput.destination=paymentIncoming
spring.cloud.stream.bindings.paymentIncomingInput.consumer.header-mode=raw
spring.cloud.stream.kafka.streams.bindings.paymentIncomingInput.consumer.applicationId=paymentIncomingInput
#
## paymentIncomingOutput
spring.cloud.stream.bindings.paymentIncomingOutput.destination=paymentIncoming
spring.cloud.stream.bindings.paymentIncomingOutput.producer.header-mode=raw
#
## paymentInflightInput
spring.cloud.stream.bindings.paymentInflightInput.destination=paymentIncoming
spring.cloud.stream.bindings.paymentInflightInput.consumer.header-mode=raw
spring.cloud.stream.kafka.streams.bindings.paymentInflightInput.consumer.applicationId=paymentInflightInput
#
## paymentDebitInput
spring.cloud.stream.bindings.paymentDebitInput.destination=paymentInflight
spring.cloud.stream.bindings.paymentDebitInput.consumer.header-mode=raw
spring.cloud.stream.kafka.streams.bindings.paymentDebitInput.consumer.applicationId=paymentDebitInput
#
## paymentDebitOutput
spring.cloud.stream.bindings.paymentDebitOutput.destination=paymentInflight
spring.cloud.stream.bindings.paymentDebitOutput.producer.header-mode=raw
#
## paymentCreditInput
spring.cloud.stream.bindings.paymentCreditInput.destination=paymentInflight
spring.cloud.stream.bindings.paymentCreditInput.consumer.header-mode=raw
spring.cloud.stream.kafka.streams.bindings.paymentCreditInput.consumer.applicationId=paymentCreditInput
#
## paymentCreditOutput
spring.cloud.stream.bindings.paymentCreditOutput.destination=paymentInflight
spring.cloud.stream.bindings.paymentCreditOutput.producer.header-mode=raw
#
## paymentCompleteInput
spring.cloud.stream.bindings.paymentCompleteInput.destination=paymentInflight
spring.cloud.stream.bindings.paymentCompleteInput.consumer.header-mode=raw
spring.cloud.stream.kafka.streams.bindings.paymentCompleteInput.consumer.applicationId=paymentCompleteInput
#
## paymentThroughputInput
spring.cloud.stream.bindings.paymentThroughputInput.destination=paymentInflight
spring.cloud.stream.bindings.paymentThroughputInput.consumer.header-mode=raw
spring.cloud.stream.kafka.streams.bindings.paymentThroughputInput.consumer.applicationId=paymentThroughputInput
#
## paymentCompleteOutput
spring.cloud.stream.bindings.paymentCompleteOutput.destination=paymentConfirmed
spring.cloud.stream.bindings.paymentCompleteOutput.producer.header-mode=raw
#
## paymentConfirmedInput
spring.cloud.stream.bindings.paymentConfirmedInput.destination=paymentConfirmed
spring.cloud.stream.bindings.paymentConfirmedInput.consumer.header-mode=raw
spring.cloud.stream.kafka.streams.bindings.paymentConfirmedInput.consumer.applicationId=paymentConfirmedInput
##
## application stuff
# fixedRate for scheduled Payment Producer, start/stopped over ControlRestController
kpay.scheduled.paymentsIncomingProducer.fixedRate=100000
