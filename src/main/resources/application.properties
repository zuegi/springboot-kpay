# spring default
spring.main.allow-bean-definition-overriding=true
#
# spring cloud streams kafka streams defaults
#spring.cloud.stream.kafka.streams.binder.application-id=kpay

#
## Serializer and my (big) problems with them, but
## Spring for Apache Kafka provides a convenient JsonSerde to be used with Kafka Streams applications
## https://github.com/schacko-samples/json-serde-example
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde=org.springframework.kafka.support.serializer.JsonSerde
spring.cloud.stream.kafka.streams.binder.configuration.spring.json.value.default.type=ch.wesr.kpay.payments.model.Payment
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms=1000
#spring.cloud.stream.kafka.binder.auto-add-partitions=true
#spring.cloud.stream.kafka.streams.binder.auto-add-partitions=true

#
## Topics
#spring.cloud.stream.dynamic-destinations=paymentIncoming,paymentInflight,paymentConfirmed

## Producer

spring.cloud.stream.bindings.paymentProducerOutput.destination=paymentIncoming
spring.cloud.stream.bindings.paymentProducerOutput.producer.header-mode=raw
spring.cloud.stream.kafka.streams.bindings.paymentProducerOutput.consumer.applicationId=paymentProducerOutput

## Incoming Processor

# In
spring.cloud.stream.bindings.paymentIncomingInput.destination=paymentIncoming
spring.cloud.stream.bindings.paymentIncomingInput.consumer.header-mode=raw
spring.cloud.stream.kafka.streams.bindings.paymentIncomingInput.consumer.applicationId=paymentIncomingInput

# Out
spring.cloud.stream.bindings.paymentIncomingOutput.destination=paymentInflight
spring.cloud.stream.bindings.paymentIncomingOutput.producer.header-mode=raw

## Account processor

# In
spring.cloud.stream.bindings.paymentAccountInput.destination=paymentInflight
spring.cloud.stream.bindings.paymentAccountInput.consumer.header-mode=raw
spring.cloud.stream.kafka.streams.bindings.paymentAccountInput.consumer.applicationId=paymentAccountInput

# Out
spring.cloud.stream.bindings.paymentAccountOutput.destination=paymentInflight
spring.cloud.stream.bindings.paymentAccountOutput.producer.header-mode=raw


## Complete Processor
# In
spring.cloud.stream.bindings.paymentCompleteInput.destination=paymentInflight
spring.cloud.stream.bindings.paymentCompleteInput.consumer.header-mode=raw
spring.cloud.stream.kafka.streams.bindings.paymentCompleteInput.consumer.applicationId=paymentCompleteInput

# Out
spring.cloud.stream.bindings.paymentCompleteOutput.destination=paymentConfirmed
spring.cloud.stream.bindings.paymentCompleteOutput.producer.header-mode=raw

## Payment Confirmed

# In
spring.cloud.stream.bindings.paymentConfirmedInput.destination=paymentConfirmed
spring.cloud.stream.bindings.paymentConfirmedInput.consumer.header-mode=raw
spring.cloud.stream.kafka.streams.bindings.paymentConfirmedInput.consumer.applicationId=paymentConfirmedInput

#
## Instrumentation plane
## Inflight Stats (windowed 1 min incoming => complete)
# In
spring.cloud.stream.bindings.paymentInflightStatsInput.destination=paymentIncoming,paymentInflight
spring.cloud.stream.bindings.paymentInflightStatsInput.consumer.header-mode=raw
spring.cloud.stream.kafka.streams.bindings.paymentInflightStatsInput.consumer.applicationId=paymentInflightStatsInput

## Throughput Stats (windowed 1 min)
spring.cloud.stream.bindings.paymentThroughputInput.destination=paymentInflight
spring.cloud.stream.bindings.paymentThroughputInput.consumer.header-mode=raw
spring.cloud.stream.kafka.streams.bindings.paymentThroughputInput.consumer.applicationId=paymentThroughputInput

##
## application stuff
# fixedRate for scheduled Payment Producer, start/stopped over ControlRestController
kpay.scheduled.paymentsIncomingProducer.fixedRate=100
