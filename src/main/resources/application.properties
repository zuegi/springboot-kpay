# spring default
spring.main.allow-bean-definition-overriding=true
#
# spring cloud streams kafka streams defaults
spring.cloud.stream.kafka.streams.binder.application-id=kpay
#
## Serializer and my (big) problems with them, but
## Spring for Apache Kafka provides a convenient JsonSerde to be used with Kafka Streams applications
## https://github.com/schacko-samples/json-serde-example
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde=org.springframework.kafka.support.serializer.JsonSerde
spring.cloud.stream.kafka.streams.binder.configuration.spring.json.value.default.type=ch.wesr.kpay.payments.model.Payment
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms=1000
spring.cloud.stream.kafka.binder.auto-add-partitions=true
spring.cloud.stream.kafka.streams.binder.auto-add-partitions=true
#
## Topics
spring.cloud.stream.dynamic-destinations=paymentIncoming,paymentInflight,paymentConfirmed
#
### bindings for topic paymentIncomingSource
spring.cloud.stream.bindings.paymentIncomingSource.destination=paymentIncoming
spring.cloud.stream.bindings.paymentIncomingSource.producer.header-mode=raw
### bindings for topic paymentIncomingInput
spring.cloud.stream.bindings.paymentIncomingInput.destination=paymentIncoming
spring.cloud.stream.bindings.paymentIncomingInput.consumer.header-mode=raw
spring.cloud.stream.kafka.streams.bindings.paymentIncomingInput.consumer.applicationId=paymentIncomingInput
### bindings for topic paymentInflightInput
spring.cloud.stream.bindings.paymentInflightInput.destination=paymentInflight
spring.cloud.stream.bindings.paymentInflightInput.producer.header-mode=raw
### Payment Confirmed
#spring.cloud.stream.bindings.paymentConfirmed.destination=paymentConfirmed


############################# to be refactored / deleted ###################################
## payment incoming
spring.cloud.stream.bindings.pinc.destination=paymentIncoming
spring.cloud.stream.bindings.pinc.consumer.header-mode=raw
spring.cloud.stream.kafka.streams.bindings.pinc.consumer.applicationId=paymentIncomingId
spring.cloud.stream.bindings.pinc.group=paymentIncomingReader
#
# payment incoming - completd payments (to update inflight stats)
spring.cloud.stream.bindings.pinccompleted.destination=paymentIncomingComplete
spring.cloud.stream.bindings.pinccompleted.producer.header-mode=raw
#
# payment inflight out
spring.cloud.stream.bindings.pinfout.destination=paymentInflight
spring.cloud.stream.bindings.pinfout.producer.header-mode=raw
#
# payment inflight in
spring.cloud.stream.bindings.pinf.destination=paymentInflight
spring.cloud.stream.bindings.pinf.consumer.header-mode=raw
spring.cloud.stream.kafka.streams.bindings.pinf.consumer.applicationId=paymentInflightId
spring.cloud.stream.bindings.pinf.group=paymentInflightReader
#
# payment complete out
spring.cloud.stream.bindings.pcoout.destination=paymentComplete
spring.cloud.stream.bindings.pcoout.producer.header-mode=raw
#
# payment inflight out out
# just another inflight out channel for the same topic
spring.cloud.stream.bindings.pinfoutout.destination=paymentInflight
spring.cloud.stream.bindings.pinfoutout.producer.header-mode=raw
#
# payment complete in
spring.cloud.stream.bindings.pcom.destination=paymentComplete
spring.cloud.stream.bindings.pcom.consumer.header-mode=raw
spring.cloud.stream.kafka.streams.bindings.pcom.consumer.applicationId=paymentCompleteId
spring.cloud.stream.bindings.pcom.group=paymentInflightReader
#
# payment complete in
spring.cloud.stream.bindings.pcothroughput.destination=paymentComplete
spring.cloud.stream.bindings.pcothroughput.consumer.header-mode=raw
spring.cloud.stream.kafka.streams.bindings.pcothroughput.consumer.applicationId=paymentCompleteThroughputId
spring.cloud.stream.bindings.pcothroughput.group=paymentInflightReader
#
# payment confirmed out
spring.cloud.stream.bindings.pconfout.destination=paymentConfirmed
spring.cloud.stream.bindings.pconfout.producer.header-mode=raw
##
## application stuff
